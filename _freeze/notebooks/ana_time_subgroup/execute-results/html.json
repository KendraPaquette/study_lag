{
  "hash": "eada2e1bb5df60958ef5a1f305203b3a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Group by Time Effects\"\nauthor: \"Kendra Wyant\"\ndate: \"2024-10-25\"\noutput: \n  html_document:\n    toc: true \n    toc_depth: 4\nformat:\n  html:\n    embed-resources: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n### Set Up Environment\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntidymodels_conflictRules()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(tidymodels))\nsuppressPackageStartupMessages(library(tidyposterior))\nlibrary(kableExtra, exclude = \"group_rows\")\nlibrary(Rcpp, exclude = \"populate\")\nlibrary(brms, exclude = c(\"ar\", \"mixture\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading 'brms' package (version 2.22.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n\ntheme_set(theme_classic()) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| output: false\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| output: false\n\n# CHTC support functions\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/chtc/static_files/fun_chtc.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"6e9288d22f09da9ec15a1d5c046a0b6736ecce8b\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_processed <- format_path(str_c(\"studydata/risk/data_processed/lag\"))\npath_models_lag <- format_path(str_c(\"studydata/risk/models/lag\"))\n```\n:::\n\n\n\n\n### Read in Model Performance Metrics\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nauroc_dem_0 <- read_csv(here::here(path_models_lag, \"test_auroc_dem_6_x_5_1week_0_v1_nested.csv\"),\n                      col_types = cols()) |> \n  mutate(fold_num = rep(1:10, 3),\n         repeat_num = c(rep(1, 10), rep(2, 10), rep(3, 10))) |> \n  select(-outer_split_num)\n\n\nauroc_dem_24 <- read_csv(here::here(path_models_lag, \"test_auroc_dem_6_x_5_1week_24_v1_nested.csv\"),\n                      col_types = cols()) |> \n  mutate(fold_num = rep(1:10, 3),\n         repeat_num = c(rep(1, 10), rep(2, 10), rep(3, 10))) |> \n  select(-outer_split_num)\n\nauroc_dem_72 <- read_csv(here::here(path_models_lag, \"test_auroc_dem_6_x_5_1week_72_v1_nested.csv\"),\n                      col_types = cols()) |> \n  mutate(fold_num = rep(1:10, 3),\n         repeat_num = c(rep(1, 10), rep(2, 10), rep(3, 10))) |> \n  select(-outer_split_num)\n\nauroc_dem_168 <- read_csv(here::here(path_models_lag, \"test_auroc_dem_6_x_5_1week_168_v1_nested.csv\"),\n                      col_types = cols()) |> \n  mutate(fold_num = rep(1:10, 3),\n         repeat_num = c(rep(1, 10), rep(2, 10), rep(3, 10))) |> \n  select(-outer_split_num)\n\nauroc_dem_336 <- read_csv(here::here(path_models_lag, \"test_auroc_dem_6_x_5_1week_336_v1_nested.csv\"),\n                      col_types = cols()) |> \n  mutate(fold_num = rep(1:10, 3),\n         repeat_num = c(rep(1, 10), rep(2, 10), rep(3, 10))) |> \n  select(-outer_split_num)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nauroc_dem_all <- auroc_dem_0 |> \n  mutate(lag = 0) |> \n  bind_rows(auroc_dem_24 |> \n              mutate(lag = 24)) |>\n  bind_rows(auroc_dem_72 |> \n              mutate(lag = 72)) |>\n  bind_rows(auroc_dem_168 |> \n              mutate(lag = 168)) |>\n  bind_rows(auroc_dem_336 |> \n              mutate(lag = 336))\n\nset.seed(101)\n```\n:::\n\n\n\n### Race\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndata <- auroc_dem_all |> \n  select(id = repeat_num, id2 = fold_num, `not white`, `non-hispanic white` = white, lag) |> \n  pivot_longer(cols = c(`not white`, `non-hispanic white`), names_to = \"race\", values_to = \"auroc\") |>\n  mutate(race = factor(race)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 300\nColumns: 5\n$ id    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2…\n$ id2   <int> 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 1,…\n$ lag   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ race  <fct> not white, non-hispanic white, not white, non-hispanic white, no…\n$ auroc <dbl> 0.9398942, 0.9117413, 0.3332944, 0.9060419, 0.7679709, 0.8649606…\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmodel_race <- brm(\n  formula = bf(auroc ~ 1 + race + lag + race*lag + (1 | id2/id)), \n  data = data,\n  family = gaussian(link = \"logit\"),\n  chains = 4,\n  iter = 3000,\n  seed = 123,\n  thin = 10\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Rows containing NAs were excluded from the model.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCompiling Stan program...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nStart sampling\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 0.000116 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 1.16 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 3000 [  0%]  (Warmup)\nChain 1: Iteration:  300 / 3000 [ 10%]  (Warmup)\nChain 1: Iteration:  600 / 3000 [ 20%]  (Warmup)\nChain 1: Iteration:  900 / 3000 [ 30%]  (Warmup)\nChain 1: Iteration: 1200 / 3000 [ 40%]  (Warmup)\nChain 1: Iteration: 1500 / 3000 [ 50%]  (Warmup)\nChain 1: Iteration: 1501 / 3000 [ 50%]  (Sampling)\nChain 1: Iteration: 1800 / 3000 [ 60%]  (Sampling)\nChain 1: Iteration: 2100 / 3000 [ 70%]  (Sampling)\nChain 1: Iteration: 2400 / 3000 [ 80%]  (Sampling)\nChain 1: Iteration: 2700 / 3000 [ 90%]  (Sampling)\nChain 1: Iteration: 3000 / 3000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 18.16 seconds (Warm-up)\nChain 1:                53.354 seconds (Sampling)\nChain 1:                71.514 seconds (Total)\nChain 1: \n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 4.5e-05 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.45 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 3000 [  0%]  (Warmup)\nChain 2: Iteration:  300 / 3000 [ 10%]  (Warmup)\nChain 2: Iteration:  600 / 3000 [ 20%]  (Warmup)\nChain 2: Iteration:  900 / 3000 [ 30%]  (Warmup)\nChain 2: Iteration: 1200 / 3000 [ 40%]  (Warmup)\nChain 2: Iteration: 1500 / 3000 [ 50%]  (Warmup)\nChain 2: Iteration: 1501 / 3000 [ 50%]  (Sampling)\nChain 2: Iteration: 1800 / 3000 [ 60%]  (Sampling)\nChain 2: Iteration: 2100 / 3000 [ 70%]  (Sampling)\nChain 2: Iteration: 2400 / 3000 [ 80%]  (Sampling)\nChain 2: Iteration: 2700 / 3000 [ 90%]  (Sampling)\nChain 2: Iteration: 3000 / 3000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 12.984 seconds (Warm-up)\nChain 2:                5.176 seconds (Sampling)\nChain 2:                18.16 seconds (Total)\nChain 2: \n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 4.4e-05 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.44 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 3000 [  0%]  (Warmup)\nChain 3: Iteration:  300 / 3000 [ 10%]  (Warmup)\nChain 3: Iteration:  600 / 3000 [ 20%]  (Warmup)\nChain 3: Iteration:  900 / 3000 [ 30%]  (Warmup)\nChain 3: Iteration: 1200 / 3000 [ 40%]  (Warmup)\nChain 3: Iteration: 1500 / 3000 [ 50%]  (Warmup)\nChain 3: Iteration: 1501 / 3000 [ 50%]  (Sampling)\nChain 3: Iteration: 1800 / 3000 [ 60%]  (Sampling)\nChain 3: Iteration: 2100 / 3000 [ 70%]  (Sampling)\nChain 3: Iteration: 2400 / 3000 [ 80%]  (Sampling)\nChain 3: Iteration: 2700 / 3000 [ 90%]  (Sampling)\nChain 3: Iteration: 3000 / 3000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 4.958 seconds (Warm-up)\nChain 3:                6.316 seconds (Sampling)\nChain 3:                11.274 seconds (Total)\nChain 3: \n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 4.4e-05 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.44 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 3000 [  0%]  (Warmup)\nChain 4: Iteration:  300 / 3000 [ 10%]  (Warmup)\nChain 4: Iteration:  600 / 3000 [ 20%]  (Warmup)\nChain 4: Iteration:  900 / 3000 [ 30%]  (Warmup)\nChain 4: Iteration: 1200 / 3000 [ 40%]  (Warmup)\nChain 4: Iteration: 1500 / 3000 [ 50%]  (Warmup)\nChain 4: Iteration: 1501 / 3000 [ 50%]  (Sampling)\nChain 4: Iteration: 1800 / 3000 [ 60%]  (Sampling)\nChain 4: Iteration: 2100 / 3000 [ 70%]  (Sampling)\nChain 4: Iteration: 2400 / 3000 [ 80%]  (Sampling)\nChain 4: Iteration: 2700 / 3000 [ 90%]  (Sampling)\nChain 4: Iteration: 3000 / 3000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 5.54 seconds (Warm-up)\nChain 4:                52.358 seconds (Sampling)\nChain 4:                57.898 seconds (Total)\nChain 4: \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 2 divergent transitions after warmup. See\nhttps://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\nto find out why this is a problem and how to eliminate them.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 310 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 10. See\nhttps://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Examine the pairs() plot to diagnose sampling problems\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The largest R-hat is 3.25, indicating chains have not mixed.\nRunning the chains for more iterations may help. See\nhttps://mc-stan.org/misc/warnings.html#r-hat\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.\nRunning the chains for more iterations may help. See\nhttps://mc-stan.org/misc/warnings.html#bulk-ess\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.\nRunning the chains for more iterations may help. See\nhttps://mc-stan.org/misc/warnings.html#tail-ess\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary(model_race)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Parts of the model have not converged (some Rhats are > 1.05). Be\ncareful when analysing the results! We recommend running more iterations and/or\nsetting stronger priors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 2 divergent transitions after warmup. Increasing\nadapt_delta above 0.8 may help. See\nhttp://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: gaussian \n  Links: mu = logit; sigma = identity \nFormula: auroc ~ 1 + race + lag + race * lag + (1 | id2/id) \n   Data: data (Number of observations: 283) \n  Draws: 4 chains, each with iter = 3000; warmup = 1500; thin = 10;\n         total post-warmup draws = 600\n\nMultilevel Hyperparameters:\n~id2 (Number of levels: 10) \n              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsd(Intercept)     2.00      2.97     0.04     8.24 1.31       11      330\n\n~id2:id (Number of levels: 30) \n              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsd(Intercept)     2.20      3.95     0.00     9.10 1.23       21       18\n\nRegression Coefficients:\n                           Estimate          Est.Error           l-95% CI\nIntercept        247988884235823.12 469991777588376.88               2.78\nracenotwhite      -5280707081408.61  10997544693548.11 -38397908279077.39\nlag                  87213786813.73    189549568145.12         -572121.26\nracenotwhite:lag  -4662714067568.34   8779688750360.53 -27534882928700.07\n                            u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept        1469978918422492.00 3.23        5       17\nracenotwhite            305862123.78 2.47        5       12\nlag                  714870842241.65 2.66        6       37\nracenotwhite:lag                0.00 3.27        5       17\n\nFurther Distributional Parameters:\n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     0.32      0.14     0.08     0.46 2.28        5       30\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbayesplot::mcmc_trace(model_race, pars = c(\"b_Intercept\", \"b_racenotwhite\", \"b_lag\", \"b_racenotwhite:lag\"))\n```\n\n::: {.cell-output-display}\n![](ana_time_subgroup_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nbayesplot::mcmc_acf(model_race, pars = c(\"b_Intercept\", \"b_racenotwhite\", \"b_lag\", \"b_racenotwhite:lag\"))\n```\n\n::: {.cell-output-display}\n![](ana_time_subgroup_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nbayesplot::mcmc_dens(model_race, pars = c(\"b_Intercept\", \"b_racenotwhite\", \"b_lag\", \"b_racenotwhite:lag\"))\n```\n\n::: {.cell-output-display}\n![](ana_time_subgroup_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n:::\n\n\n\n### Sex\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndata <- auroc_dem_all |> \n  select(id = repeat_num, id2 = fold_num, female, male, lag) |> \n  pivot_longer(cols = c(female, male), names_to = \"sex\", values_to = \"auroc\") |>\n  mutate(sex = factor(sex)) |>\n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 300\nColumns: 5\n$ id    <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2…\n$ id2   <int> 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 1,…\n$ lag   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ sex   <fct> female, male, female, male, female, male, female, male, female, …\n$ auroc <dbl> 0.8717134, 0.9537088, 0.7873624, 0.9585205, 0.8616866, 0.8588775…\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmodel_sex <- brm(\n  formula = bf(auroc ~ 1 + sex + lag + sex*lag + (1 | id2/id)), \n  data = data,\n  family = gaussian(link = \"logit\"),\n  chains = 4,\n  iter = 6000,\n  seed = 123,\n  thin = 10\n)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nCompiling Stan program...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nStart sampling\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 1).\nChain 1: \nChain 1: Gradient evaluation took 0.000111 seconds\nChain 1: 1000 transitions using 10 leapfrog steps per transition would take 1.11 seconds.\nChain 1: Adjust your expectations accordingly!\nChain 1: \nChain 1: \nChain 1: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 1: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 1: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 1: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 1: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 1: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 1: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 1: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 1: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 1: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 1: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 1: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 1: \nChain 1:  Elapsed Time: 99.063 seconds (Warm-up)\nChain 1:                106.226 seconds (Sampling)\nChain 1:                205.289 seconds (Total)\nChain 1: \n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 2).\nChain 2: \nChain 2: Gradient evaluation took 4.7e-05 seconds\nChain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.47 seconds.\nChain 2: Adjust your expectations accordingly!\nChain 2: \nChain 2: \nChain 2: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 2: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 2: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 2: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 2: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 2: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 2: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 2: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 2: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 2: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 2: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 2: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 2: \nChain 2:  Elapsed Time: 103.17 seconds (Warm-up)\nChain 2:                109.886 seconds (Sampling)\nChain 2:                213.056 seconds (Total)\nChain 2: \n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 3).\nChain 3: \nChain 3: Gradient evaluation took 4.7e-05 seconds\nChain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.47 seconds.\nChain 3: Adjust your expectations accordingly!\nChain 3: \nChain 3: \nChain 3: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 3: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 3: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 3: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 3: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 3: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 3: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 3: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 3: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 3: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 3: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 3: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 3: \nChain 3:  Elapsed Time: 106.621 seconds (Warm-up)\nChain 3:                109.158 seconds (Sampling)\nChain 3:                215.779 seconds (Total)\nChain 3: \n\nSAMPLING FOR MODEL 'anon_model' NOW (CHAIN 4).\nChain 4: \nChain 4: Gradient evaluation took 4.6e-05 seconds\nChain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.46 seconds.\nChain 4: Adjust your expectations accordingly!\nChain 4: \nChain 4: \nChain 4: Iteration:    1 / 6000 [  0%]  (Warmup)\nChain 4: Iteration:  600 / 6000 [ 10%]  (Warmup)\nChain 4: Iteration: 1200 / 6000 [ 20%]  (Warmup)\nChain 4: Iteration: 1800 / 6000 [ 30%]  (Warmup)\nChain 4: Iteration: 2400 / 6000 [ 40%]  (Warmup)\nChain 4: Iteration: 3000 / 6000 [ 50%]  (Warmup)\nChain 4: Iteration: 3001 / 6000 [ 50%]  (Sampling)\nChain 4: Iteration: 3600 / 6000 [ 60%]  (Sampling)\nChain 4: Iteration: 4200 / 6000 [ 70%]  (Sampling)\nChain 4: Iteration: 4800 / 6000 [ 80%]  (Sampling)\nChain 4: Iteration: 5400 / 6000 [ 90%]  (Sampling)\nChain 4: Iteration: 6000 / 6000 [100%]  (Sampling)\nChain 4: \nChain 4:  Elapsed Time: 22.843 seconds (Warm-up)\nChain 4:                9.576 seconds (Sampling)\nChain 4:                32.419 seconds (Total)\nChain 4: \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 43 divergent transitions after warmup. See\nhttps://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\nto find out why this is a problem and how to eliminate them.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 783 transitions after warmup that exceeded the maximum treedepth. Increase max_treedepth above 10. See\nhttps://mc-stan.org/misc/warnings.html#maximum-treedepth-exceeded\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Examine the pairs() plot to diagnose sampling problems\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The largest R-hat is 3.29, indicating chains have not mixed.\nRunning the chains for more iterations may help. See\nhttps://mc-stan.org/misc/warnings.html#r-hat\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable.\nRunning the chains for more iterations may help. See\nhttps://mc-stan.org/misc/warnings.html#bulk-ess\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable.\nRunning the chains for more iterations may help. See\nhttps://mc-stan.org/misc/warnings.html#tail-ess\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsummary(model_sex)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Parts of the model have not converged (some Rhats are > 1.05). Be\ncareful when analysing the results! We recommend running more iterations and/or\nsetting stronger priors.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There were 43 divergent transitions after warmup. Increasing\nadapt_delta above 0.8 may help. See\nhttp://mc-stan.org/misc/warnings.html#divergent-transitions-after-warmup\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: gaussian \n  Links: mu = logit; sigma = identity \nFormula: auroc ~ 1 + sex + lag + sex * lag + (1 | id2/id) \n   Data: data (Number of observations: 300) \n  Draws: 4 chains, each with iter = 6000; warmup = 3000; thin = 10;\n         total post-warmup draws = 1200\n\nMultilevel Hyperparameters:\n~id2 (Number of levels: 10) \n              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsd(Intercept)     2.70      3.66     0.01    12.68 1.53        7       32\n\n~id2:id (Number of levels: 30) \n              Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsd(Intercept)     1.78      2.18     0.19     7.12 1.31       11      192\n\nRegression Coefficients:\n             Estimate Est.Error   l-95% CI   u-95% CI Rhat Bulk_ESS Tail_ESS\nIntercept   242267.80 481775.29       1.69 1627228.90 3.27        5       13\nsexmale     -86003.58 157073.47 -498784.22       0.77 2.85        5       12\nlag          -3104.07   6245.03  -21709.45      -0.00 3.27        5       13\nsexmale:lag   2887.04   5664.87       0.00   18913.84 3.30        5       14\n\nFurther Distributional Parameters:\n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     0.29      0.15     0.03     0.41 1.68        7       34\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbayesplot::mcmc_trace(model_sex, pars = c(\"b_Intercept\", \"b_sexmale\", \"b_lag\", \"b_sexmale:lag\"))\n```\n\n::: {.cell-output-display}\n![](ana_time_subgroup_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nbayesplot::mcmc_acf(model_sex, pars = c(\"b_Intercept\", \"b_sexmale\", \"b_lag\", \"b_sexmale:lag\"))\n```\n\n::: {.cell-output-display}\n![](ana_time_subgroup_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nbayesplot::mcmc_dens(model_sex, pars = c(\"b_Intercept\", \"b_sexmale\", \"b_lag\", \"b_sexmale:lag\"))\n```\n\n::: {.cell-output-display}\n![](ana_time_subgroup_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ana_time_subgroup_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}